// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: world.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "world.pb.h"

#include <algorithm>

#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace world {
class Location_Area_TerrainDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Location_Area_Terrain> {
} _Location_Area_Terrain_default_instance_;
class Location_AreaDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Location_Area> {
} _Location_Area_default_instance_;
class LocationDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Location> {
} _Location_default_instance_;

namespace protobuf_world_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[3];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Location_Area_Terrain, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Location_Area_Terrain, xloc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Location_Area_Terrain, yloc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Location_Area_Terrain, ttype_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Location_Area, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Location_Area, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Location_Area, terrain_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Location, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Location, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Location, width_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Location, height_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Location, areas_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(Location_Area_Terrain)},
  { 8, -1, sizeof(Location_Area)},
  { 15, -1, sizeof(Location)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_Location_Area_Terrain_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Location_Area_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Location_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "world.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

}  // namespace

void TableStruct::Shutdown() {
  _Location_Area_Terrain_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _Location_Area_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _Location_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _Location_Area_Terrain_default_instance_.DefaultConstruct();
  _Location_Area_default_instance_.DefaultConstruct();
  _Location_default_instance_.DefaultConstruct();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\013world.proto\022\005world\"\327\001\n\010Location\022\014\n\004nam"
      "e\030\001 \001(\t\022\r\n\005width\030\002 \001(\005\022\016\n\006height\030\003 \001(\005\022#"
      "\n\005areas\030\004 \003(\0132\024.world.Location.Area\032y\n\004A"
      "rea\022\014\n\004name\030\001 \001(\t\022-\n\007terrain\030\002 \003(\0132\034.wor"
      "ld.Location.Area.Terrain\0324\n\007Terrain\022\014\n\004x"
      "Loc\030\001 \001(\005\022\014\n\004yLoc\030\002 \001(\005\022\r\n\005ttype\030\003 \001(\005b\006"
      "proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 246);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "world.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_world_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Location_Area_Terrain::kXLocFieldNumber;
const int Location_Area_Terrain::kYLocFieldNumber;
const int Location_Area_Terrain::kTtypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Location_Area_Terrain::Location_Area_Terrain()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_world_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:world.Location.Area.Terrain)
}
Location_Area_Terrain::Location_Area_Terrain(const Location_Area_Terrain& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&xloc_, &from.xloc_,
    reinterpret_cast<char*>(&ttype_) -
    reinterpret_cast<char*>(&xloc_) + sizeof(ttype_));
  // @@protoc_insertion_point(copy_constructor:world.Location.Area.Terrain)
}

void Location_Area_Terrain::SharedCtor() {
  ::memset(&xloc_, 0, reinterpret_cast<char*>(&ttype_) -
    reinterpret_cast<char*>(&xloc_) + sizeof(ttype_));
  _cached_size_ = 0;
}

Location_Area_Terrain::~Location_Area_Terrain() {
  // @@protoc_insertion_point(destructor:world.Location.Area.Terrain)
  SharedDtor();
}

void Location_Area_Terrain::SharedDtor() {
}

void Location_Area_Terrain::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Location_Area_Terrain::descriptor() {
  protobuf_world_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_world_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Location_Area_Terrain& Location_Area_Terrain::default_instance() {
  protobuf_world_2eproto::InitDefaults();
  return *internal_default_instance();
}

Location_Area_Terrain* Location_Area_Terrain::New(::google::protobuf::Arena* arena) const {
  Location_Area_Terrain* n = new Location_Area_Terrain;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Location_Area_Terrain::Clear() {
// @@protoc_insertion_point(message_clear_start:world.Location.Area.Terrain)
  ::memset(&xloc_, 0, reinterpret_cast<char*>(&ttype_) -
    reinterpret_cast<char*>(&xloc_) + sizeof(ttype_));
}

bool Location_Area_Terrain::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:world.Location.Area.Terrain)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 xLoc = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &xloc_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 yLoc = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &yloc_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 ttype = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ttype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:world.Location.Area.Terrain)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:world.Location.Area.Terrain)
  return false;
#undef DO_
}

void Location_Area_Terrain::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:world.Location.Area.Terrain)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 xLoc = 1;
  if (this->xloc() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->xloc(), output);
  }

  // int32 yLoc = 2;
  if (this->yloc() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->yloc(), output);
  }

  // int32 ttype = 3;
  if (this->ttype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->ttype(), output);
  }

  // @@protoc_insertion_point(serialize_end:world.Location.Area.Terrain)
}

::google::protobuf::uint8* Location_Area_Terrain::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:world.Location.Area.Terrain)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 xLoc = 1;
  if (this->xloc() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->xloc(), target);
  }

  // int32 yLoc = 2;
  if (this->yloc() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->yloc(), target);
  }

  // int32 ttype = 3;
  if (this->ttype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->ttype(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:world.Location.Area.Terrain)
  return target;
}

size_t Location_Area_Terrain::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:world.Location.Area.Terrain)
  size_t total_size = 0;

  // int32 xLoc = 1;
  if (this->xloc() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->xloc());
  }

  // int32 yLoc = 2;
  if (this->yloc() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->yloc());
  }

  // int32 ttype = 3;
  if (this->ttype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ttype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Location_Area_Terrain::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:world.Location.Area.Terrain)
  GOOGLE_DCHECK_NE(&from, this);
  const Location_Area_Terrain* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Location_Area_Terrain>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:world.Location.Area.Terrain)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:world.Location.Area.Terrain)
    MergeFrom(*source);
  }
}

void Location_Area_Terrain::MergeFrom(const Location_Area_Terrain& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:world.Location.Area.Terrain)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.xloc() != 0) {
    set_xloc(from.xloc());
  }
  if (from.yloc() != 0) {
    set_yloc(from.yloc());
  }
  if (from.ttype() != 0) {
    set_ttype(from.ttype());
  }
}

void Location_Area_Terrain::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:world.Location.Area.Terrain)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Location_Area_Terrain::CopyFrom(const Location_Area_Terrain& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:world.Location.Area.Terrain)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Location_Area_Terrain::IsInitialized() const {
  return true;
}

void Location_Area_Terrain::Swap(Location_Area_Terrain* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Location_Area_Terrain::InternalSwap(Location_Area_Terrain* other) {
  std::swap(xloc_, other->xloc_);
  std::swap(yloc_, other->yloc_);
  std::swap(ttype_, other->ttype_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Location_Area_Terrain::GetMetadata() const {
  protobuf_world_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_world_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Location_Area_Terrain

// int32 xLoc = 1;
void Location_Area_Terrain::clear_xloc() {
  xloc_ = 0;
}
::google::protobuf::int32 Location_Area_Terrain::xloc() const {
  // @@protoc_insertion_point(field_get:world.Location.Area.Terrain.xLoc)
  return xloc_;
}
void Location_Area_Terrain::set_xloc(::google::protobuf::int32 value) {
  
  xloc_ = value;
  // @@protoc_insertion_point(field_set:world.Location.Area.Terrain.xLoc)
}

// int32 yLoc = 2;
void Location_Area_Terrain::clear_yloc() {
  yloc_ = 0;
}
::google::protobuf::int32 Location_Area_Terrain::yloc() const {
  // @@protoc_insertion_point(field_get:world.Location.Area.Terrain.yLoc)
  return yloc_;
}
void Location_Area_Terrain::set_yloc(::google::protobuf::int32 value) {
  
  yloc_ = value;
  // @@protoc_insertion_point(field_set:world.Location.Area.Terrain.yLoc)
}

// int32 ttype = 3;
void Location_Area_Terrain::clear_ttype() {
  ttype_ = 0;
}
::google::protobuf::int32 Location_Area_Terrain::ttype() const {
  // @@protoc_insertion_point(field_get:world.Location.Area.Terrain.ttype)
  return ttype_;
}
void Location_Area_Terrain::set_ttype(::google::protobuf::int32 value) {
  
  ttype_ = value;
  // @@protoc_insertion_point(field_set:world.Location.Area.Terrain.ttype)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Location_Area::kNameFieldNumber;
const int Location_Area::kTerrainFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Location_Area::Location_Area()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_world_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:world.Location.Area)
}
Location_Area::Location_Area(const Location_Area& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      terrain_(from.terrain_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:world.Location.Area)
}

void Location_Area::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

Location_Area::~Location_Area() {
  // @@protoc_insertion_point(destructor:world.Location.Area)
  SharedDtor();
}

void Location_Area::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Location_Area::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Location_Area::descriptor() {
  protobuf_world_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_world_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Location_Area& Location_Area::default_instance() {
  protobuf_world_2eproto::InitDefaults();
  return *internal_default_instance();
}

Location_Area* Location_Area::New(::google::protobuf::Arena* arena) const {
  Location_Area* n = new Location_Area;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Location_Area::Clear() {
// @@protoc_insertion_point(message_clear_start:world.Location.Area)
  terrain_.Clear();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool Location_Area::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:world.Location.Area)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "world.Location.Area.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .world.Location.Area.Terrain terrain = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_terrain()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:world.Location.Area)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:world.Location.Area)
  return false;
#undef DO_
}

void Location_Area::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:world.Location.Area)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "world.Location.Area.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // repeated .world.Location.Area.Terrain terrain = 2;
  for (unsigned int i = 0, n = this->terrain_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->terrain(i), output);
  }

  // @@protoc_insertion_point(serialize_end:world.Location.Area)
}

::google::protobuf::uint8* Location_Area::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:world.Location.Area)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "world.Location.Area.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // repeated .world.Location.Area.Terrain terrain = 2;
  for (unsigned int i = 0, n = this->terrain_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->terrain(i), deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:world.Location.Area)
  return target;
}

size_t Location_Area::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:world.Location.Area)
  size_t total_size = 0;

  // repeated .world.Location.Area.Terrain terrain = 2;
  {
    unsigned int count = this->terrain_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->terrain(i));
    }
  }

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Location_Area::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:world.Location.Area)
  GOOGLE_DCHECK_NE(&from, this);
  const Location_Area* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Location_Area>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:world.Location.Area)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:world.Location.Area)
    MergeFrom(*source);
  }
}

void Location_Area::MergeFrom(const Location_Area& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:world.Location.Area)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  terrain_.MergeFrom(from.terrain_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void Location_Area::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:world.Location.Area)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Location_Area::CopyFrom(const Location_Area& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:world.Location.Area)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Location_Area::IsInitialized() const {
  return true;
}

void Location_Area::Swap(Location_Area* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Location_Area::InternalSwap(Location_Area* other) {
  terrain_.InternalSwap(&other->terrain_);
  name_.Swap(&other->name_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Location_Area::GetMetadata() const {
  protobuf_world_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_world_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Location_Area

// string name = 1;
void Location_Area::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Location_Area::name() const {
  // @@protoc_insertion_point(field_get:world.Location.Area.name)
  return name_.GetNoArena();
}
void Location_Area::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:world.Location.Area.name)
}
#if LANG_CXX11
void Location_Area::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:world.Location.Area.name)
}
#endif
void Location_Area::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:world.Location.Area.name)
}
void Location_Area::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:world.Location.Area.name)
}
::std::string* Location_Area::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:world.Location.Area.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Location_Area::release_name() {
  // @@protoc_insertion_point(field_release:world.Location.Area.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Location_Area::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:world.Location.Area.name)
}

// repeated .world.Location.Area.Terrain terrain = 2;
int Location_Area::terrain_size() const {
  return terrain_.size();
}
void Location_Area::clear_terrain() {
  terrain_.Clear();
}
const ::world::Location_Area_Terrain& Location_Area::terrain(int index) const {
  // @@protoc_insertion_point(field_get:world.Location.Area.terrain)
  return terrain_.Get(index);
}
::world::Location_Area_Terrain* Location_Area::mutable_terrain(int index) {
  // @@protoc_insertion_point(field_mutable:world.Location.Area.terrain)
  return terrain_.Mutable(index);
}
::world::Location_Area_Terrain* Location_Area::add_terrain() {
  // @@protoc_insertion_point(field_add:world.Location.Area.terrain)
  return terrain_.Add();
}
::google::protobuf::RepeatedPtrField< ::world::Location_Area_Terrain >*
Location_Area::mutable_terrain() {
  // @@protoc_insertion_point(field_mutable_list:world.Location.Area.terrain)
  return &terrain_;
}
const ::google::protobuf::RepeatedPtrField< ::world::Location_Area_Terrain >&
Location_Area::terrain() const {
  // @@protoc_insertion_point(field_list:world.Location.Area.terrain)
  return terrain_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Location::kNameFieldNumber;
const int Location::kWidthFieldNumber;
const int Location::kHeightFieldNumber;
const int Location::kAreasFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Location::Location()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_world_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:world.Location)
}
Location::Location(const Location& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      areas_(from.areas_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&width_, &from.width_,
    reinterpret_cast<char*>(&height_) -
    reinterpret_cast<char*>(&width_) + sizeof(height_));
  // @@protoc_insertion_point(copy_constructor:world.Location)
}

void Location::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&width_, 0, reinterpret_cast<char*>(&height_) -
    reinterpret_cast<char*>(&width_) + sizeof(height_));
  _cached_size_ = 0;
}

Location::~Location() {
  // @@protoc_insertion_point(destructor:world.Location)
  SharedDtor();
}

void Location::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Location::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Location::descriptor() {
  protobuf_world_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_world_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Location& Location::default_instance() {
  protobuf_world_2eproto::InitDefaults();
  return *internal_default_instance();
}

Location* Location::New(::google::protobuf::Arena* arena) const {
  Location* n = new Location;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Location::Clear() {
// @@protoc_insertion_point(message_clear_start:world.Location)
  areas_.Clear();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&width_, 0, reinterpret_cast<char*>(&height_) -
    reinterpret_cast<char*>(&width_) + sizeof(height_));
}

bool Location::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:world.Location)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "world.Location.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 width = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &width_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 height = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .world.Location.Area areas = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_areas()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:world.Location)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:world.Location)
  return false;
#undef DO_
}

void Location::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:world.Location)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "world.Location.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // int32 width = 2;
  if (this->width() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->width(), output);
  }

  // int32 height = 3;
  if (this->height() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->height(), output);
  }

  // repeated .world.Location.Area areas = 4;
  for (unsigned int i = 0, n = this->areas_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->areas(i), output);
  }

  // @@protoc_insertion_point(serialize_end:world.Location)
}

::google::protobuf::uint8* Location::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:world.Location)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "world.Location.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // int32 width = 2;
  if (this->width() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->width(), target);
  }

  // int32 height = 3;
  if (this->height() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->height(), target);
  }

  // repeated .world.Location.Area areas = 4;
  for (unsigned int i = 0, n = this->areas_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->areas(i), deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:world.Location)
  return target;
}

size_t Location::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:world.Location)
  size_t total_size = 0;

  // repeated .world.Location.Area areas = 4;
  {
    unsigned int count = this->areas_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->areas(i));
    }
  }

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // int32 width = 2;
  if (this->width() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->width());
  }

  // int32 height = 3;
  if (this->height() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->height());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Location::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:world.Location)
  GOOGLE_DCHECK_NE(&from, this);
  const Location* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Location>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:world.Location)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:world.Location)
    MergeFrom(*source);
  }
}

void Location::MergeFrom(const Location& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:world.Location)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  areas_.MergeFrom(from.areas_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.width() != 0) {
    set_width(from.width());
  }
  if (from.height() != 0) {
    set_height(from.height());
  }
}

void Location::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:world.Location)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Location::CopyFrom(const Location& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:world.Location)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Location::IsInitialized() const {
  return true;
}

void Location::Swap(Location* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Location::InternalSwap(Location* other) {
  areas_.InternalSwap(&other->areas_);
  name_.Swap(&other->name_);
  std::swap(width_, other->width_);
  std::swap(height_, other->height_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Location::GetMetadata() const {
  protobuf_world_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_world_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Location

// string name = 1;
void Location::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Location::name() const {
  // @@protoc_insertion_point(field_get:world.Location.name)
  return name_.GetNoArena();
}
void Location::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:world.Location.name)
}
#if LANG_CXX11
void Location::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:world.Location.name)
}
#endif
void Location::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:world.Location.name)
}
void Location::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:world.Location.name)
}
::std::string* Location::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:world.Location.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Location::release_name() {
  // @@protoc_insertion_point(field_release:world.Location.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Location::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:world.Location.name)
}

// int32 width = 2;
void Location::clear_width() {
  width_ = 0;
}
::google::protobuf::int32 Location::width() const {
  // @@protoc_insertion_point(field_get:world.Location.width)
  return width_;
}
void Location::set_width(::google::protobuf::int32 value) {
  
  width_ = value;
  // @@protoc_insertion_point(field_set:world.Location.width)
}

// int32 height = 3;
void Location::clear_height() {
  height_ = 0;
}
::google::protobuf::int32 Location::height() const {
  // @@protoc_insertion_point(field_get:world.Location.height)
  return height_;
}
void Location::set_height(::google::protobuf::int32 value) {
  
  height_ = value;
  // @@protoc_insertion_point(field_set:world.Location.height)
}

// repeated .world.Location.Area areas = 4;
int Location::areas_size() const {
  return areas_.size();
}
void Location::clear_areas() {
  areas_.Clear();
}
const ::world::Location_Area& Location::areas(int index) const {
  // @@protoc_insertion_point(field_get:world.Location.areas)
  return areas_.Get(index);
}
::world::Location_Area* Location::mutable_areas(int index) {
  // @@protoc_insertion_point(field_mutable:world.Location.areas)
  return areas_.Mutable(index);
}
::world::Location_Area* Location::add_areas() {
  // @@protoc_insertion_point(field_add:world.Location.areas)
  return areas_.Add();
}
::google::protobuf::RepeatedPtrField< ::world::Location_Area >*
Location::mutable_areas() {
  // @@protoc_insertion_point(field_mutable_list:world.Location.areas)
  return &areas_;
}
const ::google::protobuf::RepeatedPtrField< ::world::Location_Area >&
Location::areas() const {
  // @@protoc_insertion_point(field_list:world.Location.areas)
  return areas_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace world

// @@protoc_insertion_point(global_scope)
